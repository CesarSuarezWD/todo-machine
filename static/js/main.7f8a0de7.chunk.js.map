{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoItem/index.js","TodoList/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoLC","text","toLowerCase","searchValueLC","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","comleted","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoItem","onClick","onComplete","alt","src","onDelete","TodoList","CreateTodoButton","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","Fragment","lenght","map","App","render"],"mappings":"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","file":"static/js/main.7f8a0de7.chunk.js","sourcesContent":["import React from 'react';\nimport {useLocalStorage} from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n// const {provider, consumer} = React.createContext();\n\nfunction TodoProvider(props)\n{\n\n    const {\n        item: todos, \n        saveItem: saveTodos, \n        loading,\n        error,\n      } = useLocalStorage('TODOS_V1', []);\n    \n      \n      const [searchValue, setSearchValue] = React.useState(''); // Aqui se define el estado del search\n      // const [todos, setTodos] = React.useState(defaultTodos); // Pertenece a  search\n      // const completedTodos = todos.filter(todo => todo.completed == true).length; // Forma original de realizar la validación del search\n      const [openModal, setOpenModal] = React.useState(false); // Indica que el modal inicia cerrado (false)\n      const completedTodos = todos.filter(todo => !!todo.completed).length; // Forma reducida de realizar la validación (falso & falso da true) pertenece a search\n      const totalTodos = todos.length; // Pertenece a counter\n    \n    //----------------------- Pertenece a Search ------------------------------\n      \n      let searchedTodos = [];\n      \n      if (searchValue.length >= 1)\n      {\n        searchedTodos = todos.filter(todo =>\n          {\n            const todoLC = todo.text.toLowerCase();\n            const searchValueLC = searchValue.toLowerCase();\n    \n            return todoLC.includes(searchValueLC);\n          });\n      } \n      else \n      {    \n        searchedTodos = todos; // Trae el text y el completed\n      }\n    \n    //----------------------- Pertenece a Item ------------------------------\n    \n    // Función encargada de marcar como realizados los todos\n    \n      const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos]; // se inyectan todos los todos (tareas) que teniamos antes (... significa todos)\n        // newTodos[todoIndex].completed = true; // Solo marca si se completó\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed; // Conmuta entre completado o no\n        saveTodos(newTodos);\n      }; \n\n    // Función encargada de añadir un ToDo\n    \n    const addTodo = (text) => {\n      const newTodos = [...todos]; // se inyectan todos los todos (tareas) que teniamos antes (... significa todos)\n      // newTodos[todoIndex].completed = true; // Solo marca si se completó\n      newTodos.push({\n        comleted: false,\n        text,\n      });\n      saveTodos(newTodos);\n    }; \n    \n    // Fucnción encargada de eliminar los todos\n    \n      const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n      }\n\n    return(\n        <TodoContext.Provider value = {{ // Value es un objeto por eso se usa el doble corchete\n\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal,\n            addTodo,\n\n         }}> \n\n            {props.children}\n\n        </TodoContext.Provider>\n    );\n}\n\n\nexport { TodoContext, TodoProvider };\n","import React from 'react';\n\nfunction useLocalStorage (itemName, initialValue){\n\n    const [error, setError] = React.useState(false);\n  \n    const [loading, setLoading] = React.useState(true);\n  \n    const [item, setItem] = React.useState(initialValue); // Pertenece a  search\n  \n    React.useEffect(() => {\n      setTimeout(() => {\n        try {\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n          \n          if(!localStorageItem) // ! Indica si el localstorage esta vacio, null, false, etc.\n          {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n          }\n          else\n          {\n            parsedItem = JSON.parse(localStorageItem);\n          }\n  \n          setItem(parsedItem);\n          setLoading(false);\n        } catch (error) {\n          setError(error);\n        }\n      }, 1000)\n    }, []);\n  \n  \n    //------------Función de transición para complete y delete---------------\n  \n    const saveItem = (newItem) => {\n      try {\n        const stringifiedItem = JSON.stringify(newItem);\n        localStorage.setItem(itemName, stringifiedItem);\n        setItem(newItem);\n      } catch (error) {\n        setError(error);\n      }\n    };\n  \n    return{ // Por convención de React, cuando se tienen mas de dos estados, se cambia el array [], por un objeto {}. Inicialmente tenia item y saveItem, y se le agrego loading, por ende cambia la sintaxis\n      item,\n      saveItem,\n      loading,\n      error,\n    };\n  \n  }\n\nexport {useLocalStorage};","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\nfunction TodoCounter() // va entre {} por que son las propiedades que en realidad son un objeto\n{\n    const {totalTodos, completedTodos} = React.useContext(TodoContext);\n\n    return(\n\n        <h2 className = \"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODO's</h2>\n    );\n}\n\nexport { TodoCounter };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch ()\n{\n    const { searchValue, setSearchValue } = React.useContext(TodoContext);\n    \n    // const [searchValue, setSearchValue] = React.useState(''); // Esto es un estado\n    const onSearchValueChange = (event) => {\n        // console.log(event);\n        console.log(event.target.value);\n        setSearchValue(event.target.value);\n    }\n\n    return( \n        \n        <input // Esta es la caja de texto de busqueda\n            className = \"TodoSearch\" \n            placeholder = \"Search...\" \n            value = {searchValue}\n            onChange = { onSearchValueChange }\n        />\n    );\n}\nexport { TodoSearch };","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n\n\n  return (\n    <li className=\"TodoItem\">\n      <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n      onClick = {props.onComplete}\n      >\n        {/* √ */}\n        <img alt= \"Check\" src=\"https://img.icons8.com/ios-glyphs/50/000000/checked--v1.png\"/>\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\"\n        onClick = {props.onDelete}\n      >\n        {/* X */}\n        <img alt = \"Delete\" src=\"https://img.icons8.com/external-kiranshastry-solid-kiranshastry/32/000000/external-delete-multimedia-kiranshastry-solid-kiranshastry.png\"/>\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };","import React from 'react';\nimport './TodoList.css';\n\nfunction TodoList(props)\n{\n    return(\n\n        <section>\n            <ul>\n                {props.children}\n            </ul>           \n        </section>  \n           \n    );\n}\n\nexport { TodoList };","import React from \"react\";\nimport './CreateTodoButton.css';\nimport {TodoContext} from '../TodoContext';\n\n\nfunction CreateTodoButton() {\n    const { openModal, setOpenModal } = React.useContext(TodoContext);\n\n    const onClickButton = () => {    \n\n        setOpenModal(!openModal);  \n\n    };\n\n    return(\n        <button \n\n            className = \"CreateTodoButton\"\n            onClick = {onClickButton} \n\n        >\n            +\n\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './Modal.css';\n\nfunction Modal({ children }){\n\n    return ReactDOM.createPortal(\n\n        <div className = \"ModalBackground\">\n\n            {children}\n\n        </div>,\n\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoForm.css';\n\nfunction TodoForm () {\n\n    const [newTodoValue, setNewTodoValue] = React.useState('');\n\n    const {\n\n        addTodo,\n        setOpenModal,\n\n    } = React.useContext(TodoContext);\n\n    const onChange = (event) => {\n        \n        setNewTodoValue (event.target.value);\n    }\n\n    const onCancel = () => {\n        \n        setOpenModal(false);\n\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        if(newTodoValue.length <= 0)return;\n         \n        addTodo(newTodoValue); \n        \n        setOpenModal(false);\n    };\n\n    return(\n        <form onSubmit={onSubmit}>\n\n            <label>Escribe tu nuevo ToDo!!</label>\n\n            <textarea \n                value = {newTodoValue}\n                onChange = {onChange}\n                placeholder = \"Cortar la cebolla para el almuerzo\"\n            />\n\n            <div className = \"TodoForm-buttonContainer\"> \n                <button className = \"TodoForm-button TodoForm-button--cancel\" type = \"button\" onClick = {onCancel}>\n                    Cancelar\n                </button>\n\n                <button className = \"TodoForm-button TodoForm-button--add\" type = \"submit\">\n                    Añadir\n                </button>\n            </div>\n            \n\n        </form>\n    );\n}\n\nexport { TodoForm };","import React from 'react';\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoList } from \"../TodoList\";\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport './AppUI.css';\nimport { TodoContext } from '../TodoContext';\nimport { Modal } from '../Modal';\nimport { TodoForm } from '../TodoForm';\n\nfunction AppUI ()\n\n{\n    \n const {    error, // Propiedades del value (destructuración del value)\n            loading, \n            searchedTodos, \n            completeTodo, \n            deleteTodo,\n            openModal,\n            setOpenModal,\n        } = React.useContext(TodoContext);\n\n    return(\n        <React.Fragment>\n            <TodoCounter />\n\n            <TodoSearch />\n\n            <TodoList>\n\n            {error && <p className = \"pInformativoError\">Hubo un error...</p>}\n\n            {loading && <p className = \"pInformativoLoading\">Estamos cargando, no desesperes...</p>}\n            {/* La && signifca que es true (si loading es true, entonces...) */}\n\n            {(!loading && !searchedTodos.lenght) && <p className = \"pInformativo\"></p>}\n            {/* El && en el primer caso significa \"and\" y en el segundo caso significa \"entonces\". El \"!\" significa no. */}\n\n                {searchedTodos.map(todo => (\n\n                <TodoItem \n                    key = {todo.text} \n                    text = {todo.text}\n                    completed = {todo.completed}\n                    onComplete = {() => completeTodo(todo.text)}\n                    onDelete = {() => deleteTodo(todo.text)}\n                />\n\n                ))}\n            </TodoList>\n\n            {!!openModal && ( // Doble negación = true.\n                <Modal>\n\n                    <TodoForm />\n\n                </Modal>\n            )}\n\n            <CreateTodoButton \n            \n                setOpenModal = { setOpenModal }\n            \n            />\n \n        </React.Fragment>\n    );\n}\n\nexport { AppUI };","import React from \"react\";\nimport { AppUI } from \"./AppUI\";\nimport { TodoProvider } from '../TodoContext';\n\n// const defaultTodos = [\n//   {text: 'Cortar cebolla', completed: false},\n//   {text: 'Tomar el curso de intro a React', completed: false},\n//   {text: 'Llorar con la llorona', completed: false},\n//   {text: 'Lalalala', completed: false},\n// ];\n\n\n\nfunction App() {\n  \n  return (\n    <TodoProvider>\n\n      <AppUI />\n      \n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import App from './App/index.js'; // Esto en caso que no encuentre app como tal\nimport './index.css';\n\nReactDOM.render( \n \n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}